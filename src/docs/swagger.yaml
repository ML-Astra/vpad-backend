openapi: 3.0.0
info:
  title: Indie Streaming App API
  version: 0.0.1
servers:
  - url: http://localhost:3000
    description: Local server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserNoId:
      type: object
      properties:
        username:
          type: string
          example: funnyusername
        nickname:
          type: string
          example: funnynickname
        email:
          type: string
          example: email@domain.com
        profilePhotoUrl:
          type: string
          example: some://download.link
        about:
          type: string
          example: i love pens
        contact:
          type: string
          example: some phone number or something, idk
        admin:
          type: boolean
          example: false
    400:
      description: Bad Request
      type: object
      properties:
        error:
          type: string
          example:
            Bad Request, Invalid Token, Invalid Email, Invalid Password, Incorrect Password, ...
    401:
      description: Unauthorized
      type: object
      properties:
        error:
          type: string
          example: Unauthorized, Missing Token, Expired Token, ...
    403:
      description: Forbidden
      type: object
      properties:
        error:
          type: string
          example: Fobridden
    404:
      description: Not Found
      type: object
      properties:
        error:
          type: string
          example: Not Found
paths:
  /user/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Returns user data from id, must be logged in
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User data, optional refreshed token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNoId'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        404:
          description: Provided ID did not resolve to any user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
    put:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Updates User from id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: myUsername
                nickname:
                  type: string
                  example: myNickname
                email:
                  type: string
                  example: email@domain.com
                password:
                  type: string
                  example: myfunnypassword
                about:
                  type: string
                  example: some about section
                profilePhotoBase64:
                  type: string
                  example: blablabase64fileblabla
      responses:
        200:
          description: User ID, optional refreshed token
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: someidlol
                  token:
                    type: string
                    example: blablajwttoken
        404:
          description: Provided ID did not resolve to any user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /user/login:
    post:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Logins using email or username and password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: myUsername
                email:
                  type: string
                  example: email@domain.com
                password:
                  type: string
                  example: myfunnypassword
      responses:
        200:
          description: User ID and token
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: someidlol
                  token:
                    type: string
                    example: blablajwttoken
        400:
          description: Missing username and email or incorrect password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
        403:
          description: User is banned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
        404:
          description: Provided data did not resolve to any user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404'
  /user/register:
    post:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: Registers a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: myUsername
                email:
                  type: string
                  example: email@domain.com
                password:
                  type: string
                  example: myfunnypassword
                about:
                  type: string
                  example: some about section
      responses:
        200:
          description: User ID and token
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: someidlol
                  token:
                    type: string
                    example: blablajwttoken
        400:
          description: Invalid name, email or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
  /post:
    post:
      security:
        - bearerAuth: []
      tags:
        - Post
      summary: Creates a post
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: blabla amogus
                mediaBase64:
                  type: string
                  example: email@domain.com
                thumbBase64:
                  type: string
                  example: myfunnypassword
      responses:
        200:
          description: Post ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: someidlol
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
  /post/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      summary: Gets a post
      responses:
        200:
          description: The post u wanted :3
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                    example: myUsername
                  mediaUrl:
                    type: string
                    example: someUrl
                  thumbUrl:
                    type: string
                    example: someUrl
                  meta:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            example: some id
                          nickname:
                            type: string
                            example: some nickname or whatever
                          profilePhotoUrl:
                            type: string
                            example: "some url"
                      likes:
                        type: integer
                        example: 100
                      dislikes:
                        type: integer
                        example: 20
                      views:
                        type: integer
                        example: 130
                      myVote:
                        type: integer
                        example: 1
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
    put:
      security:
        - bearerAuth: []
      tags:
        - Post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      summary: Edits a post
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: myUsername
                mediaBase64:
                  type: string
                  example: email@domain.com
                thumbBase64:
                  type: string
                  example: myfunnypassword
      responses:
        200:
          description: Nothing :3
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'
    delete:
      security:
        - bearerAuth: []
      tags:
        - Post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      summary: Deletes a post
      responses:
        200:
          description: Nothing :3
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400'